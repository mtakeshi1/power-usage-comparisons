/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    scala

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath("com.github.johnrengelman:shadow:8.1.1")
    }
}

dependencies {
    implementation("org.scala-lang:scala3-library_3:3.2.2")
//    implementation ("org.tpolecat:skunk-core_2.13:0.5.1")
    implementation("org.http4s:http4s-ember-server_3:1.0.0-M39")
    implementation("org.http4s:http4s-dsl_3:1.0.0-M39")
    implementation("io.circe:circe-generic_3:0.15.0-M1")
    implementation("io.circe:circe-parser_3:0.15.0-M1")
    implementation("io.circe:circe-core_3:0.15.0-M1")
    implementation("org.http4s:http4s-circe_3:1.0.0-M39")
    implementation("org.tpolecat:skunk-core_3:0.5.1")
    implementation("ch.qos.logback:logback-classic:1.4.6")
//    implementation("tf.tofu:derevo-cats_2.13:0.13.0")
    // Use Scalatest for testing our library
    testImplementation("junit:junit:4.13.2")
}

application {
    // Define the main class for the application.
    mainClass.set("simplerest.MainIO")
}

tasks.register<Jar>("fatJar") {
    manifest {
        attributes["Main-Class"] = "simplerest.MainIO"
    }
    archiveBaseName.set("scala-rest.jar")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(configurations.runtimeClasspath)
}
apply { plugin("com.github.johnrengelman.shadow") }